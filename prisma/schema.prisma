generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Game          Game[]
}

enum GameType {
  mcq
  open_ended
}

model Game {
  id          String     @id @default(cuid())
  userId      String
  timeStarted DateTime
  topic       String
  timeEnded   DateTime?
  gameType    GameType
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions   Question[]

  @@index([userId], name: "userId")
}

model Question {
  id                String   @id @default(cuid())
  question          String
  answer            String
  gameId            String
  options           Json? //For mcq questions
  percentageCorrect Float? //For fill blanks
  isCorrect         Boolean? //For mcq questions
  questionType      GameType
  userAnswer        String?

  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId], name: "gameId")
}
